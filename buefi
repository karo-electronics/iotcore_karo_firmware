#!/bin/bash


# UEFI
# note: On Windows Ubuntu, ignore any Python errors during build specifically like 
# "ERROR - Please upgrade Python! Current version is 3.6.7. Recommended minimum is 3.7."

# setup
pushd mu_platform_nxp
export GCC5_AARCH64_PREFIX=~/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-
pip3 install -r requirements.txt --upgrade

python3.6 KARO/TX8M_MINI_EVK_1GB/PlatformBuild.py --setup
# if error here about NugetDependency.global_cache_path, then make sure mono-devel package is installed
# using apt-get as listed in "Update and install build tools" above.

cd MU_BASECORE
make -C BaseTools
cd ..

popd

# clean
pushd mu_platform_nxp
rm -r Build
rm -r Config
popd

# build
pushd mu_platform_nxp

export GCC5_AARCH64_PREFIX=~/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-



# TARGET=RELEASE  or TARGET=DEBUG
##python3.6 KARO/TX8M_MINI_EVK_1GB/PlatformBuild.py TOOL_CHAIN_TAG=GCC5 \
##  BUILDREPORTING=TRUE BUILDREPORT_TYPES="PCD" TARGET=RELEASE \
##  MAX_CONCURRENT_THREAD_NUMBER=20 BLD_*_CONFIG_NOT_SECURE_UEFI=1

python3.6 KARO/TX8M_MINI_EVK_1GB/PlatformBuild.py -V TARGET=RELEASE \
 PROFILE=DEV MAX_CONCURRENT_THREAD_NUMBER=20





# RELEASE_GCC5   or DEBUG_GCC5
cd Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/FV
cp ../../../../../imx-iotcore/build/firmware/its/uefi_imx8_unsigned.its .
../../../../../u-boot/tools/mkimage -f uefi_imx8_unsigned.its -r uefi.fit

popd
# RELEASE_GCC5   or DEBUG_GCC5
###cp mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/FV/uefi.fit /mnt/karonas/trans/Uwe/WIN10IOT/firmware/tx8mm

