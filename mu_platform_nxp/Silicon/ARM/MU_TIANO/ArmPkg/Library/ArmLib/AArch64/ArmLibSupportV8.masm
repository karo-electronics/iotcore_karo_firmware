//------------------------------------------------------------------------------
//
// Copyright (c) 2008 - 2009, Apple Inc. All rights reserved.<BR>
// Copyright (c) 2011 - 2014, ARM Limited. All rights reserved.
//
// This program and the accompanying materials
// are licensed and made available under the terms and conditions of the BSD License
// which accompanies this distribution.  The full text of the license may be found at
// http://opensource.org/licenses/bsd-license.php
//
// THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
// WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
//
//------------------------------------------------------------------------------

#include <AsmMacroIoLibV8.h>

    AREA    |.text|,ALIGN=3,CODE,READONLY

    EXPORT ArmIsMpCore
    EXPORT ArmEnableAsynchronousAbort
    EXPORT ArmDisableAsynchronousAbort
    EXPORT ArmEnableIrq
    EXPORT ArmDisableIrq
    EXPORT ArmEnableFiq
    EXPORT ArmDisableFiq
    EXPORT ArmEnableInterrupts
    EXPORT ArmDisableInterrupts
    EXPORT ArmDisableAllExceptions
    EXPORT ReadCCSIDR
    EXPORT ReadCLIDR

//------------------------------------------------------------------------------

#define MPIDR_U_BIT     (30)
#define MPIDR_U_MASK    (1 << MPIDR_U_BIT)

// DAIF bit definitions for writing through msr daifclr/sr daifset
#define DAIF_WR_FIQ_BIT    (1 << 0)
#define DAIF_WR_IRQ_BIT    (1 << 1)
#define DAIF_WR_ABORT_BIT  (1 << 2)
#define DAIF_WR_DEBUG_BIT  (1 << 3)
#define DAIF_WR_INT_BITS   (DAIF_WR_FIQ_BIT :OR: DAIF_WR_IRQ_BIT)
#define DAIF_WR_ALL        (DAIF_WR_DEBUG_BIT :OR: DAIF_WR_ABORT_BIT :OR: DAIF_WR_INT_BITS)


ArmIsMpCore PROC
  mrs   x0, mpidr_el1         // Read EL1 Mutliprocessor Affinty Reg (MPIDR)
  and   x0, x0, #MPIDR_U_MASK // U Bit clear, the processor is part of a multiprocessor system
  lsr   x0, x0, #MPIDR_U_BIT
  eor   x0, x0, #1
  ret
ArmIsMpCore ENDP


ArmEnableAsynchronousAbort PROC
  msr   daifclr, #DAIF_WR_ABORT_BIT
  isb sy
  ret
ArmEnableAsynchronousAbort ENDP


ArmDisableAsynchronousAbort PROC
  msr   daifset, #DAIF_WR_ABORT_BIT
  isb sy
  ret
ArmDisableAsynchronousAbort ENDP


ArmEnableIrq PROC
  msr   daifclr, #DAIF_WR_IRQ_BIT
  isb sy
  ret
ArmEnableIrq ENDP


ArmDisableIrq PROC
  msr   daifset, #DAIF_WR_IRQ_BIT
  isb sy
  ret
ArmDisableIrq ENDP


ArmEnableFiq PROC
  msr   daifclr, #DAIF_WR_FIQ_BIT
  isb sy
  ret
ArmEnableFiq ENDP


ArmDisableFiq PROC
  msr   daifset, #DAIF_WR_FIQ_BIT
  isb sy
  ret
ArmDisableFiq ENDP


ArmEnableInterrupts PROC
  msr   daifclr, #DAIF_WR_INT_BITS
  isb sy
  ret
ArmEnableInterrupts ENDP


ArmDisableInterrupts PROC
  msr   daifset, #DAIF_WR_INT_BITS
  isb sy
  ret
ArmDisableInterrupts ENDP


ArmDisableAllExceptions PROC
  msr   daifset, #DAIF_WR_ALL
  isb sy
  ret
ArmDisableAllExceptions ENDP


// UINT32
// ReadCCSIDR (
//   IN UINT32 CSSELR
//   )
ReadCCSIDR PROC
  msr   csselr_el1, x0        // Write Cache Size Selection Register (CSSELR)
  isb sy
  mrs   x0, ccsidr_el1        // Read current Cache Size ID Register (CCSIDR)
  ret
ReadCCSIDR ENDP


// UINT32
// ReadCLIDR (
//   IN UINT32 CSSELR
//   )
ReadCLIDR PROC
  mrs   x0, clidr_el1         // Read Cache Level ID Register
  ret
ReadCLIDR ENDP

    END