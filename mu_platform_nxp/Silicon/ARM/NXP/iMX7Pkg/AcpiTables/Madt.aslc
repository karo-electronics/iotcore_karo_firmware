/*
* Description: Multiple APIC Description Table (MADT)
*
*  Copyright (c) Microsoft Corporation. All rights reserved.
*
*  This program and the accompanying materials
*  are licensed and made available under the terms and conditions of the BSD License
*  which accompanies this distribution.  The full text of the license may be found at
*  http://opensource.org/licenses/bsd-license.php
*
*  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
*  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
*
*/

#include <Library/AcpiLib.h>
#include <Platform.h>
#include <iMX7.h>

#define GICC_BASE                 FixedPcdGet64 (PcdGicInterruptInterfaceBase)
#define GICD_BASE                 FixedPcdGet64 (PcdGicDistributorBase)

// Virtualization related fields. Not supported on IMX7
#define GICH_BASE                 0
#define GICV_BASE                 0
#define VGIC_MAINT_INT            0

#define PMU_INTERRUPT             92

#pragma pack(push, 1)
typedef struct {
  EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER Header;
  EFI_ACPI_6_0_GIC_STRUCTURE                          GicC[FixedPcdGet32(PcdCoreCount)];
  EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE              GicD;
} ACPI_6_0_MADT_STRUCTURE;
#pragma pack(pop)

ACPI_6_0_MADT_STRUCTURE Madt = {
  {
    {
      EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE,       // UINT32  Signature
      sizeof (ACPI_6_0_MADT_STRUCTURE),                             // UINT32  Length
      EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION,        // UINT8   Revision
      0,                                                            // UINT8   Checksum
      EFI_ACPI_OEM_ID,                                              // UINT8   OemId[6]
      EFI_ACPI_OEM_TABLE_ID,                                        // UINT64  OemTableId
      EFI_ACPI_OEM_REVISION,                                        // UINT32  OemRevision
      EFI_ACPI_CREATOR_ID,                                          // UINT32  CreatorId
      EFI_ACPI_CREATOR_REVISION                                     // UINT32  CreatorRevision
    },
    0,      // UINT32  LocalApicAddress
    0       // UINT32  Flags
  },
  {
    EFI_ACPI_6_0_GICC_STRUCTURE_INIT(0,                         // GicId
                                     0x000,                     // AcpiCpuUid
                                     0x000,                     // Mpidr
                                     EFI_ACPI_6_0_GIC_ENABLED,  // Flags
                                     PMU_INTERRUPT,             // PmuIrq
                                     GICC_BASE,                 // GicBase
                                     GICV_BASE,                 // GicVBase
                                     GICH_BASE,                 // GicHBase
                                     VGIC_MAINT_INT,            // GsivId
                                     0,                         // GicRBase
                                     0                          // Efficiency
                                     ),
#if FixedPcdGet32(PcdCoreCount) > 1
    EFI_ACPI_6_0_GICC_STRUCTURE_INIT(1,                         // GicId
                                     0x001,                     // AcpiCpuUid
                                     0x001,                     // Mpidr
                                     EFI_ACPI_6_0_GIC_ENABLED,  // Flags
                                     PMU_INTERRUPT,             // PmuIrq
                                     GICC_BASE,                 // GicBase
                                     GICV_BASE,                 // GicVBase
                                     GICH_BASE,                 // GicHBase
                                     VGIC_MAINT_INT,            // GsivId
                                     0,                         // GicRBase
                                     0                          // Efficiency
                                     ),
#endif
  },
  EFI_ACPI_6_0_GIC_DISTRIBUTOR_INIT(0x0,                        // GicDistHwId
                                    GICD_BASE,                  // GicDistBase
                                    IC_DIST_VECTOR_BASE,        // GicDistVector
                                    EFI_ACPI_6_0_GIC_V2         // GicVersion
                                    )
};

VOID*
ReferenceAcpiTable (
  VOID
  )
{
  //
  // Reference the table being generated to prevent the optimizer from removing the
  // data structure from the executable
  //
  return (VOID*)&Madt;
}
