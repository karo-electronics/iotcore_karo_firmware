/** @file
*  Multiple APIC Description Table (MADT)
*
*  Copyright (c) 2012 - 2016, ARM Limited. All rights reserved.
*  Copyright (c) Microsoft Corporation. All rights reserved.
*
*  This program and the accompanying materials
*  are licensed and made available under the terms and conditions of the BSD License
*  which accompanies this distribution.  The full text of the license may be found at
*  http://opensource.org/licenses/bsd-license.php
*
*  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
*  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
*
**/

#include "iMX8Platform.h"

#include <Library/AcpiLib.h>
#include <Library/ArmLib.h>
#include <Library/PcdLib.h>

#include <IndustryStandard/Acpi.h>

#define GICC_BASE                 0 	/* GIC v3 uses system registers */
#define GICD_BASE                 FixedPcdGet64 (PcdGicDistributorBase)
#define GICR_BASE                 FixedPcdGet64 (PcdGicRedistributorsBase)

// Virtualization related fields. Not supported yet.
#define GICH_BASE                 0
#define GICV_BASE                 0
#define VGIC_MAINT_INT            0

#define PMU_INTERRUPT             92

#pragma pack(push, 1)
typedef struct {
  EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER Header;
  EFI_ACPI_6_0_GIC_STRUCTURE                          GicC[FixedPcdGet32(PcdCoreCount)];
  EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE              GicD;
} ACPI_6_0_MADT_STRUCTURE;
#pragma pack(pop)

ACPI_6_0_MADT_STRUCTURE Madt = {
  {
    ARM_ACPI_HEADER ( EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE,
                      ACPI_6_0_MADT_STRUCTURE,
                      EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION),
    0,      // UINT32  LocalApicAddress
    0       // UINT32  Flags
  },
  {
    EFI_ACPI_6_0_GICC_STRUCTURE_INIT(0,                         // GicId
                                     0x000,                     // AcpiCpuUid
                                     0x000,                     // Mpidr
                                     EFI_ACPI_6_0_GIC_ENABLED,  // Flags
                                     PMU_INTERRUPT,             // PmuIrq
                                     GICC_BASE,                 // GicBase
                                     GICV_BASE,                 // GicVBase
                                     GICH_BASE,                 // GicHBase
                                     VGIC_MAINT_INT,            // GsivId
                                     GICR_BASE,                 // GicRBase
                                     0                          // Efficiency
                                     ),
#if FixedPcdGet32(PcdCoreCount) > 1
    EFI_ACPI_6_0_GICC_STRUCTURE_INIT(1,                         // GicId
                                     0x001,                     // AcpiCpuUid
                                     0x001,                     // Mpidr
                                     EFI_ACPI_6_0_GIC_ENABLED,  // Flags
                                     PMU_INTERRUPT,             // PmuIrq
                                     GICC_BASE,                 // GicBase
                                     GICV_BASE,                 // GicVBase
                                     GICH_BASE,                 // GicHBase
                                     VGIC_MAINT_INT,            // GsivId
                                     GICR_BASE + 0x20000,       // GicRBase
                                     0                          // Efficiency
                                     ),
#endif
#if FixedPcdGet32(PcdCoreCount) > 2
    EFI_ACPI_6_0_GICC_STRUCTURE_INIT(2,                         // GicId
                                     0x002,                     // AcpiCpuUid
                                     0x002,                     // Mpidr
                                     EFI_ACPI_6_0_GIC_ENABLED,  // Flags
                                     PMU_INTERRUPT,             // PmuIrq
                                     GICC_BASE,                 // GicBase
                                     GICV_BASE,                 // GicVBase
                                     GICH_BASE,                 // GicHBase
                                     VGIC_MAINT_INT,            // GsivId
                                     GICR_BASE + 0x40000,       // GicRBase
                                     0                          // Efficiency
                                     ),
#endif
#if FixedPcdGet32(PcdCoreCount) > 3
    EFI_ACPI_6_0_GICC_STRUCTURE_INIT(3,                         // GicId
                                     0x003,                     // AcpiCpuUid
                                     0x003,                     // Mpidr
                                     EFI_ACPI_6_0_GIC_ENABLED,  // Flags
                                     PMU_INTERRUPT,             // PmuIrq
                                     GICC_BASE,                 // GicBase
                                     GICV_BASE,                 // GicVBase
                                     GICH_BASE,                 // GicHBase
                                     VGIC_MAINT_INT,            // GsivId
                                     GICR_BASE + 0x60000,       // GicRBase
                                     0                          // Efficiency
                                     ),
#endif
  },
  EFI_ACPI_6_0_GIC_DISTRIBUTOR_INIT(0x0,                        // GicDistHwId
                                    GICD_BASE,                  // GicDistBase
                                    IC_DIST_VECTOR_BASE,        // GicDistVector
                                    EFI_ACPI_6_0_GIC_V3         // GicVersion
                                    )
};

//
// Reference the table being generated to prevent the optimizer from removing the
// data structure from the executable
//
VOID* CONST ReferenceAcpiTable = &Madt;

