#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = iMX8
PLATFORM_GUID = 63DF721C-2030-47F0-BACB-1682E96A2A0C
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = KARO/TX8M_MINI_EVK_1GB
PLATFORM_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/KARO/TX8M_MINI_EVK_1GB
PLATFORM_OUTPUT_DIR = Build/TX8M_MINI_EVK_1GB

#
# Module Macro Definition
#
MODULE_NAME = ArmPlatformPrePiUniCore
MODULE_GUID = d959e387-7b91-452c-90e0-a1dbac90ddb8
MODULE_NAME_GUID = ArmPlatformPrePiUniCore
MODULE_VERSION = 1.0
MODULE_TYPE = SEC
MODULE_FILE = PeiUniCore.inf
MODULE_FILE_BASE_NAME = PeiUniCore
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = ArmPlatformPkg/PrePi
PACKAGE_RELATIVE_DIR = PrePi
MODULE_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi
FFS_OUTPUT_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/FV/Ffs/d959e387-7b91-452c-90e0-a1dbac90ddb8ArmPlatformPrePiUniCore

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = ArmPlatformPrePiUniCore
FILE_GUID = d959e387-7b91-452c-90e0-a1dbac90ddb8
MODULE_TYPE = SEC
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = AARCH64
TOOLCHAIN = GCC5
TOOLCHAIN_TAG = GCC5
TARGET = RELEASE

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5
BUILD_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5
BIN_DIR = $(BUILD_DIR)/AARCH64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore
OUTPUT_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT
DEBUG_DIR = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = cp -f
MV = mv -f
RM = rm -f
MD = mkdir -p
RD = rm -r -f


#
# Tools definitions specific to this module
#
OPTROM = EfiRom
OPTROM_FLAGS = -e

PLATFORM_FLAGS = 

DTC_FLAGS = -H epapr
DTC = dtc

APP_FLAGS = 

OBJCOPY_ADDDEBUGFLAG =  
OBJCOPY = echo
OBJCOPY_FLAGS = objcopy not needed for

ASL = iasl
ASL_FLAGS = 
ASL_OUTFLAGS =  -p

GENFW = GenFw
GENFW_FLAGS = 

ASLDLINK = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(BASE_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20

BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB

LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

ASM = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -mlittle-endian

SLINK = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc-ar

RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF


RC = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-objcopy
RC_FLAGS = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for

DTCPP_FLAGS = -E -x assembler-with-cpp -imacros $(DEST_DIR_DEBUG)/AutoGen.h -nostdinc -undef
DTCPP = cpp

NASM = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/MU_BASECORE/BaseTools/Bin/mu_nasm_extdep/Linux-x86-64/nasm

PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7

ASLPP = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
ASLPP_FLAGS = -x c -E -include AutoGen.h

ASLCC = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
ASLCC_FLAGS = -x c -fno-lto

CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18 -mcmodel=small -flto -Wno-unused-but-set-variable -Wno-unused-const-variable -DTX8M_MINI_EVK_1GB -DCPU_IMX8MM -DCONFIG_DUMP_SYMBOL_INFO=1 -DCONFIG_MPCORE=1 -DCONFIG_OPTEE=1 -DMDEPKG_NDEBUG
CC = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
CC_XIPFLAGS =  -mstrict-align -mgeneral-regs-only

TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

VFR = VfrCompile
VFR_FLAGS = -l -n

PP = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h

VFRPP = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h

DLINK2_FLAGS = -Wl,--script=$(BASE_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wno-error

MAKE = make

DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -z common-page-size=0x1000 -flto -Os -L/home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPkg/Library/GccLto -llto-aarch64 -Wl,-plugin-opt=-pass-through=-llto-aarch64 -Wno-lto-type-mismatch
DLINK_XIPFLAGS =  -z common-page-size=0x20
DLINK = /home/uwe/gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc

LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

NASMB_FLAGS = -f bin

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
STATIC_LIBRARY_FILES =  \
    $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/OUTPUT/BasePcdLibNull.lib \
    $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/BaseMemoryLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/OUTPUT/BaseLib.lib \
    $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/OUTPUT/ArmBaseLib.lib \
    $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/OUTPUT/ArmCacheMaintenanceLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/OUTPUT/BaseIoLibIntrinsic.lib \
    $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/OUTPUT/BaseDebugPrintErrorLevelLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/OUTPUT/BasePrintLib.lib \
    $(BIN_DIR)/iMXPlatformPkg/Library/UartSerialPortLib/UartSerialPortLib/OUTPUT/SerialPortLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/OUTPUT/BaseDebugLibSerialPort.lib \
    $(BIN_DIR)/ArmPkg/Library/ArmGenericTimerPhyCounterLib/ArmGenericTimerPhyCounterLib/OUTPUT/ArmGenericTimerPhyCounterLib.lib \
    $(BIN_DIR)/ArmPkg/Library/ArmArchTimerLib/ArmArchTimerLib/OUTPUT/ArmArchTimerLib.lib \
    $(BIN_DIR)/ArmPlatformPkg/Library/PrePiHobListPointerLib/PrePiHobListPointerLib/OUTPUT/PrePiHobListPointerLib.lib \
    $(BIN_DIR)/EmbeddedPkg/Library/PrePiHobLib/PrePiHobLib/OUTPUT/PrePiHobLib.lib \
    $(BIN_DIR)/Microsoft/Library/LauterbachPeCoffExtraActionLib/LauterbachPeCoffExtraActionLib/OUTPUT/LauterbachPeCoffExtraActionLib.lib \
    $(BIN_DIR)/MdeModulePkg/Library/PeiPerformanceLib/PeiPerformanceLib/OUTPUT/PeiPerformanceLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/OUTPUT/BasePeCoffLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseUefiDecompressLib/BaseUefiDecompressLib/OUTPUT/BaseUefiDecompressLib.lib \
    $(BIN_DIR)/EmbeddedPkg/Library/PrePiExtractGuidedSectionLib/PrePiExtractGuidedSectionLib/OUTPUT/PrePiExtractGuidedSectionLib.lib \
    $(BIN_DIR)/EmbeddedPkg/Library/PrePiLib/PrePiLib/OUTPUT/PrePiLib.lib \
    $(BIN_DIR)/iMX8Pkg/Library/iMX8IoMuxLib/iMX8IoMuxLib/OUTPUT/iMX8IoMuxLib.lib \
    $(BIN_DIR)/iMX8Pkg/Library/iMX8ClkPwrLib/iMX8ClkPwrLib/OUTPUT/iMX8ClkPwrLib.lib \
    $(BIN_DIR)/EmbeddedPkg/Library/PrePiMemoryAllocationLib/PrePiMemoryAllocationLib/OUTPUT/PrePiMemoryAllocationLib.lib \
    $(BIN_DIR)/KARO/TX8M_MINI_EVK_1GB/Library/iMX8BoardLib/iMX8BoardLib/OUTPUT/iMX8BoardLib.lib \
    $(BIN_DIR)/ArmPkg/Library/ArmMmuLib/ArmMmuBaseLib/OUTPUT/ArmMmuBaseLib.lib \
    $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/OUTPUT/DebugAgentSymbolsBaseLib.lib \
    $(BIN_DIR)/MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib/OUTPUT/LzmaDecompressLib.lib \
    $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformStackLib/ArmPlatformStackLib/OUTPUT/ArmPlatformStackLib.lib \
    $(BIN_DIR)/ArmPlatformPkg/PlatformPei/PlatformPeiLib/OUTPUT/ArmPlatformPeiLib.lib \
    $(BIN_DIR)/ArmPlatformPkg/MemoryInitPei/MemoryInitPeiLib/OUTPUT/ArmMemoryInitPeiLib.lib \
    $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/OUTPUT/CompilerIntrinsicsLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/OUTPUT/BaseStackCheckLib.lib \
    $(OUTPUT_DIR)/ArmPlatformPrePiUniCore.lib

OBJECT_FILES =  \
    $(OUTPUT_DIR)/PrePi.obj \
    $(OUTPUT_DIR)/MainUniCore.obj \
    $(OUTPUT_DIR)/AArch64/ArchPrePi.obj \
    $(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj \
    $(OUTPUT_DIR)/AutoGen.obj

INC =  \
    -I$(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/AArch64 \
    -I$(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/MU_BASECORE/MdePkg \
    -I$(WORKSPACE)/MU_BASECORE/MdePkg/Include \
    -I$(WORKSPACE)/MU_BASECORE/MdePkg/Include/AArch64 \
    -I$(WORKSPACE)/MU_BASECORE/MdeModulePkg \
    -I$(WORKSPACE)/MU_BASECORE/MdeModulePkg/Include \
    -I$(WORKSPACE)/Common/MU_TIANO/EmbeddedPkg \
    -I$(WORKSPACE)/Common/MU_TIANO/EmbeddedPkg/Include \
    -I$(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg \
    -I$(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include \
    -I$(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg \
    -I$(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/Include

STATIC_LIBRARY_FILES_LIST = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/static_library_files.lst
OBJECT_FILES_LIST = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/object_files.lst


COMMON_DEPS = $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiHob.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Base.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Chipset/ArmV7Mmu.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiStatusCode.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Uefi/UefiBaseType.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiFirmwareVolume.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiBootMode.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/PcdLib.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiPeiCis.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiMultiPhase.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/BaseMemoryLib.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/AArch64/ProcessorBind.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/MasterBootMode.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/PrePi.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Protocol/SerialIo.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/BaseLib.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/PiPei.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/Include/Library/ArmPlatformLib.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Uefi/UefiMultiPhase.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/IoLib.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Chipset/ArmV7.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiFirmwareFile.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/PciCfg2.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/BootInRecoveryMode.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Chipset/AArch64Mmu.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiDependency.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/MemoryAllocationLib.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/HobLib.h \
              $(DEBUG_DIR)/AutoGen.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Protocol/DebugSupport.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiS3BootScript.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/IndustryStandard/PeImage.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/CpuIo.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Guid/WinCertificate.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/DebugLib.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Library/ArmLib.h \
              $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Chipset/AArch64.h \
              $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/SerialPortLib.h \
              

#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/ArmPlatformPrePiUniCore.done \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/iMXPlatformPkg/Library/UartSerialPortLib/UartSerialPortLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmGenericTimerPhyCounterLib/ArmGenericTimerPhyCounterLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmArchTimerLib/ArmArchTimerLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/PrePiHobListPointerLib/PrePiHobListPointerLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiHobLib/PrePiHobLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/Microsoft/Library/LauterbachPeCoffExtraActionLib/LauterbachPeCoffExtraActionLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdeModulePkg/Library/PeiPerformanceLib/PeiPerformanceLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseUefiDecompressLib/BaseUefiDecompressLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiExtractGuidedSectionLib/PrePiExtractGuidedSectionLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiLib/PrePiLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/iMX8Pkg/Library/iMX8IoMuxLib/iMX8IoMuxLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/iMX8Pkg/Library/iMX8ClkPwrLib/iMX8ClkPwrLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiMemoryAllocationLib/PrePiMemoryAllocationLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/KARO/TX8M_MINI_EVK_1GB/Library/iMX8BoardLib/iMX8BoardLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmMmuLib/ArmMmuBaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformStackLib/ArmPlatformStackLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/PlatformPei/PlatformPeiLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/MemoryInitPei/MemoryInitPeiLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/GNUmakefile
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

#
# Individual Object Build Targets
#
$(DEBUG_DIR)/ArmPlatformPrePiUniCore.dll : $(MAKE_FILE)
$(DEBUG_DIR)/ArmPlatformPrePiUniCore.dll : $(STATIC_LIBRARY_FILES)
$(DEBUG_DIR)/ArmPlatformPrePiUniCore.dll : $(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.dll $(DLINK_FLAGS) $(DLINK_XIPFLAGS) -Wl,--start-group,@$(STATIC_LIBRARY_FILES_LIST),--end-group $(CC_FLAGS) $(CC_XIPFLAGS) $(DLINK2_FLAGS)
	"$(OBJCOPY)" $(OBJCOPY_FLAGS) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.dll

$(DEBUG_DIR)/ArmPlatformPrePiUniCore.efi : $(DEBUG_DIR)/ArmPlatformPrePiUniCore.dll
	$(CP) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.dll $(DEBUG_DIR)/$(MODULE_NAME).debug
	$(OBJCOPY) --strip-unneeded -R .eh_frame /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.dll
	-$(OBJCOPY) $(OBJCOPY_ADDDEBUGFLAG) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.dll
	-$(CP) $(DEBUG_DIR)/$(MODULE_NAME).debug $(BIN_DIR)/$(MODULE_NAME_GUID).debug
	"$(GENFW)" -e $(MODULE_TYPE) -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.efi /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.dll $(GENFW_FLAGS)
	$(CP) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.efi $(OUTPUT_DIR)
	$(CP) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.efi $(BIN_DIR)/$(MODULE_NAME_GUID).efi
	-$(CP) $(DEBUG_DIR)/*.map $(OUTPUT_DIR)

$(OUTPUT_DIR)/ArmPlatformPrePiUniCore.done : $(DEBUG_DIR)/ArmPlatformPrePiUniCore.efi
	$(CP) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/ArmPlatformPrePiUniCore.efi $(OUTPUT_DIR)

$(OUTPUT_DIR)/PrePi.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/PrePi.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdeModulePkg/Include/Library/DebugAgentLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/ExtractGuidedSectionLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdeModulePkg/Include/Ppi/SecPerformance.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Guid/ArmMpCoreInfo.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/Common/MU_TIANO/EmbeddedPkg/Include/Guid/ExtractSection.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/GuidedSectionExtraction.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/PerformanceLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/Common/MU_TIANO/EmbeddedPkg/Include/Library/PrePiHobListPointerLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/PrintLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/TimerLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/Common/MU_TIANO/EmbeddedPkg/Include/Library/PrePiLib.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/Ppi/ArmMpCoreInfo.h
$(OUTPUT_DIR)/PrePi.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/PrePi.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/./PrePi.obj $(INC) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/PrePi.c

$(OUTPUT_DIR)/AArch64/ArchPrePi.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/AArch64/ArchPrePi.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/AArch64/ArchPrePi.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/AArch64/ArchPrePi.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/AArch64/ArchPrePi.obj $(INC) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/AArch64/ArchPrePi.c

$(OUTPUT_DIR)/AutoGen.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiHob.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Base.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiStatusCode.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Uefi/UefiBaseType.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiFirmwareVolume.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiBootMode.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/PcdLib.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiPeiCis.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiMultiPhase.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/AArch64/ProcessorBind.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/BaseLib.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/PiPei.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Uefi/UefiMultiPhase.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiFirmwareFile.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/PciCfg2.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiDependency.h
$(OUTPUT_DIR)/AutoGen.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Protocol/DebugSupport.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiS3BootScript.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/IndustryStandard/PeImage.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/CpuIo.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Guid/WinCertificate.h
$(OUTPUT_DIR)/AutoGen.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/DebugLib.h
$(OUTPUT_DIR)/AutoGen.obj : $(DEBUG_DIR)/AutoGen.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/./AutoGen.obj $(INC) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/DEBUG/AutoGen.c

$(OUTPUT_DIR)/MainUniCore.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/MainUniCore.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/MainUniCore.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/MainUniCore.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/./MainUniCore.obj $(INC) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/MainUniCore.c

$(OUTPUT_DIR)/ArmPlatformPrePiUniCore.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/ArmPlatformPrePiUniCore.lib : $(OBJECT_FILES_LIST)
	$(RM) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/ArmPlatformPrePiUniCore.lib
	"$(SLINK)" cr /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/ArmPlatformPrePiUniCore.lib $(SLINK_FLAGS) @$(OBJECT_FILES_LIST)

$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiHob.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Base.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiStatusCode.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Uefi/UefiBaseType.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiFirmwareVolume.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiBootMode.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/PcdLib.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiPeiCis.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiMultiPhase.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/AArch64/ProcessorBind.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Library/BaseLib.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/PiPei.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Uefi/UefiMultiPhase.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiFirmwareFile.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/PciCfg2.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiDependency.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Protocol/DebugSupport.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Pi/PiS3BootScript.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/IndustryStandard/PeImage.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Ppi/CpuIo.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/MU_BASECORE/MdePkg/Include/Guid/WinCertificate.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPkg/Include/AsmMacroIoLibV8.h
$(OUTPUT_DIR)/AArch64/ModuleEntryPoint.obj : $(WORKSPACE)/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/AArch64/ModuleEntryPoint.S
	"$(PP)" $(PP_FLAGS) $(INC) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPlatformPkg/PrePi/AArch64/ModuleEntryPoint.S > /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/AArch64/ModuleEntryPoint.i
	Trim --trim-long --source-code -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/AArch64/ModuleEntryPoint.iii /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/AArch64/ModuleEntryPoint.i
	"$(ASM)" $(ASM_FLAGS) -o /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/AArch64/ModuleEntryPoint.obj $(INC) /home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Build/TX8M_MINI_EVK_1GB/RELEASE_GCC5/AARCH64/ArmPlatformPkg/PrePi/PeiUniCore/OUTPUT/AArch64/ModuleEntryPoint.iii



#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/iMXPlatformPkg/Library/UartSerialPortLib/UartSerialPortLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/iMXPlatformPkg/Library/UartSerialPortLib/UartSerialPortLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmGenericTimerPhyCounterLib/ArmGenericTimerPhyCounterLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmGenericTimerPhyCounterLib/ArmGenericTimerPhyCounterLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmArchTimerLib/ArmArchTimerLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmArchTimerLib/ArmArchTimerLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPlatformPkg/Library/PrePiHobListPointerLib/PrePiHobListPointerLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/PrePiHobListPointerLib/PrePiHobListPointerLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmbeddedPkg/Library/PrePiHobLib/PrePiHobLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiHobLib/PrePiHobLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/Microsoft/Library/LauterbachPeCoffExtraActionLib/LauterbachPeCoffExtraActionLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/Microsoft/Library/LauterbachPeCoffExtraActionLib/LauterbachPeCoffExtraActionLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdeModulePkg/Library/PeiPerformanceLib/PeiPerformanceLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdeModulePkg/Library/PeiPerformanceLib/PeiPerformanceLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseUefiDecompressLib/BaseUefiDecompressLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseUefiDecompressLib/BaseUefiDecompressLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmbeddedPkg/Library/PrePiExtractGuidedSectionLib/PrePiExtractGuidedSectionLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiExtractGuidedSectionLib/PrePiExtractGuidedSectionLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmbeddedPkg/Library/PrePiLib/PrePiLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiLib/PrePiLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/iMX8Pkg/Library/iMX8IoMuxLib/iMX8IoMuxLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/iMX8Pkg/Library/iMX8IoMuxLib/iMX8IoMuxLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/iMX8Pkg/Library/iMX8ClkPwrLib/iMX8ClkPwrLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/iMX8Pkg/Library/iMX8ClkPwrLib/iMX8ClkPwrLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmbeddedPkg/Library/PrePiMemoryAllocationLib/PrePiMemoryAllocationLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/PrePiMemoryAllocationLib/PrePiMemoryAllocationLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/KARO/TX8M_MINI_EVK_1GB/Library/iMX8BoardLib/iMX8BoardLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/KARO/TX8M_MINI_EVK_1GB/Library/iMX8BoardLib/iMX8BoardLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmMmuLib/ArmMmuBaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmMmuLib/ArmMmuBaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformStackLib/ArmPlatformStackLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformStackLib/ArmPlatformStackLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPlatformPkg/PlatformPei/PlatformPeiLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/PlatformPei/PlatformPeiLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPlatformPkg/MemoryInitPei/MemoryInitPeiLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/MemoryInitPei/MemoryInitPeiLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/GNUmakefile cleanall
	@cd $(MODULE_BUILD_DIR)

