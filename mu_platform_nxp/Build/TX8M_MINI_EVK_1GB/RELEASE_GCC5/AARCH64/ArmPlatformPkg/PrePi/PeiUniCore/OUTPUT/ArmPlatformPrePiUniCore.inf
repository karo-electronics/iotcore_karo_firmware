#/** @file
#
#  (C) Copyright 2015 Hewlett-Packard Development Company, L.P.<BR>
#  Copyright (c) 2011-2017, ARM Ltd. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#**/

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = ArmPlatformPrePiUniCore
  FILE_GUID                  = d959e387-7b91-452c-90e0-a1dbac90ddb8
  MODULE_TYPE                = SEC
  VERSION_STRING             = 1.0

[Packages.AARCH64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec
  EmbeddedPkg/EmbeddedPkg.dec
  ArmPkg/ArmPkg.dec

[Binaries.AARCH64]
  BIN|ArmPlatformPrePiUniCore.done

[PatchPcd.AARCH64]

[Protocols.AARCH64]
  gEfiCpuArchProtocolGuid

  gEfiStatusCodeRuntimeProtocolGuid

  gPeCoffLoaderProtocolGuid


[Ppis.AARCH64]
  gArmMpCoreInfoPpiGuid

  # PPI ALWAYS_PRODUCED
  gEfiPeiMasterBootModePpiGuid

  # PPI SOMETIMES_PRODUCED
  gEfiPeiBootInRecoveryModePpiGuid


[Guids.AARCH64]
  gArmMpCoreInfoGuid

  gEfiFirmwarePerformanceGuid

  gEfiHobMemoryAllocModuleGuid

  gEfiHobMemoryAllocStackGuid

  ## PRODUCES ## HOB
  ## CONSUMES ## HOB
  gEdkiiFpdtExtendedFirmwarePerformanceGuid

  gEfiStatusCodeSpecificDataGuid

  gEfiMemoryTypeInformationGuid

  gEfiStatusCodeDataTypeDebugGuid

  ## PRODUCES  ## UNDEFINED # specifies LZMA custom decompress algorithm.
  gLzmaCustomDecompressGuid


[PcdEx.AARCH64]

[LibraryClasses.AARCH64]
## @LIB_INSTANCES
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  ArmPkg/Library/ArmLib/ArmBaseLib.inf
#  ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  iMXPlatformPkg/Library/UartSerialPortLib/UartSerialPortLib.inf
#  MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort.inf
#  ArmPkg/Library/ArmGenericTimerPhyCounterLib/ArmGenericTimerPhyCounterLib.inf
#  ArmPkg/Library/ArmArchTimerLib/ArmArchTimerLib.inf
#  ArmPlatformPkg/Library/PrePiHobListPointerLib/PrePiHobListPointerLib.inf
#  EmbeddedPkg/Library/PrePiHobLib/PrePiHobLib.inf
#  Microsoft/Library/LauterbachPeCoffExtraActionLib/LauterbachPeCoffExtraActionLib.inf
#  MdeModulePkg/Library/PeiPerformanceLib/PeiPerformanceLib.inf
#  MdePkg/Library/BasePeCoffLib/BasePeCoffLib.inf
#  MdePkg/Library/BaseUefiDecompressLib/BaseUefiDecompressLib.inf
#  EmbeddedPkg/Library/PrePiExtractGuidedSectionLib/PrePiExtractGuidedSectionLib.inf
#  EmbeddedPkg/Library/PrePiLib/PrePiLib.inf
#  iMX8Pkg/Library/iMX8IoMuxLib/iMX8IoMuxLib.inf
#  iMX8Pkg/Library/iMX8ClkPwrLib/iMX8ClkPwrLib.inf
#  EmbeddedPkg/Library/PrePiMemoryAllocationLib/PrePiMemoryAllocationLib.inf
#  KARO/TX8M_MINI_EVK_1GB/Library/iMX8BoardLib/iMX8BoardLib.inf
#  ArmPkg/Library/ArmMmuLib/ArmMmuBaseLib.inf
#  ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib.inf
#  MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib.inf
#  ArmPlatformPkg/Library/ArmPlatformStackLib/ArmPlatformStackLib.inf
#  ArmPlatformPkg/PlatformPei/PlatformPeiLib.inf
#  ArmPlatformPkg/MemoryInitPei/MemoryInitPeiLib.inf
#  ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib.inf
#  MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib.inf

[Depex.AARCH64]
#  (TRUE) AND (TRUE)





[BuildOptions.AARCH64]
## @AsBuilt
##   GCC:RELEASE_GCC5_AARCH64_OPTROM_FLAGS = -e
##   GCC:RELEASE_GCC5_AARCH64_PLATFORM_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_DTC_FLAGS = -H epapr
##   GCC:RELEASE_GCC5_AARCH64_APP_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:RELEASE_GCC5_AARCH64_ASL_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_GENFW_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(BASE_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20
##   GCC:RELEASE_GCC5_AARCH64_ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -mlittle-endian
##   GCC:RELEASE_GCC5_AARCH64_RC_FLAGS = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii
##   GCC:RELEASE_GCC5_AARCH64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:RELEASE_GCC5_AARCH64_DTCPP_FLAGS = -E -x assembler-with-cpp -imacros $(DEST_DIR_DEBUG)/AutoGen.h -nostdinc -undef
##   GCC:RELEASE_GCC5_AARCH64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:RELEASE_GCC5_AARCH64_ASLCC_FLAGS = -x c -fno-lto
##   GCC:RELEASE_GCC5_AARCH64_CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char  -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18 -mcmodel=small -flto -Wno-unused-but-set-variable -Wno-unused-const-variable -DTX8M_MINI_EVK_1GB -DCPU_IMX8MM -DCONFIG_DUMP_SYMBOL_INFO=1 -DCONFIG_MPCORE=1 -DCONFIG_OPTEE=1 -DMDEPKG_NDEBUG
##   GCC:RELEASE_GCC5_AARCH64_VFR_FLAGS = -l -n
##   GCC:RELEASE_GCC5_AARCH64_PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:RELEASE_GCC5_AARCH64_VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:RELEASE_GCC5_AARCH64_DLINK2_FLAGS = -Wl,--script=$(BASE_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wno-error
##   GCC:RELEASE_GCC5_AARCH64_DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -z common-page-size=0x1000 -flto -Os -L/home/uwe/git/ms/iot_core_tx8mmini/mu_platform_nxp/Silicon/ARM/MU_TIANO/ArmPkg/Library/GccLto -llto-aarch64 -Wl,-plugin-opt=-pass-through=-llto-aarch64 -Wno-lto-type-mismatch
##   GCC:RELEASE_GCC5_AARCH64_NASMB_FLAGS = -f bin
